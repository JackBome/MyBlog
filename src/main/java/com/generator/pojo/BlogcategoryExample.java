package com.generator.pojo;

import java.util.ArrayList;
import java.util.List;

public class BlogcategoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public BlogcategoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCategorynameIsNull() {
            addCriterion("categoryName is null");
            return (Criteria) this;
        }

        public Criteria andCategorynameIsNotNull() {
            addCriterion("categoryName is not null");
            return (Criteria) this;
        }

        public Criteria andCategorynameEqualTo(String value) {
            addCriterion("categoryName =", value, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameNotEqualTo(String value) {
            addCriterion("categoryName <>", value, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameGreaterThan(String value) {
            addCriterion("categoryName >", value, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameGreaterThanOrEqualTo(String value) {
            addCriterion("categoryName >=", value, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameLessThan(String value) {
            addCriterion("categoryName <", value, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameLessThanOrEqualTo(String value) {
            addCriterion("categoryName <=", value, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameLike(String value) {
            addCriterion("categoryName like", value, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameNotLike(String value) {
            addCriterion("categoryName not like", value, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameIn(List<String> values) {
            addCriterion("categoryName in", values, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameNotIn(List<String> values) {
            addCriterion("categoryName not in", values, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameBetween(String value1, String value2) {
            addCriterion("categoryName between", value1, value2, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynameNotBetween(String value1, String value2) {
            addCriterion("categoryName not between", value1, value2, "categoryname");
            return (Criteria) this;
        }

        public Criteria andCategorynumIsNull() {
            addCriterion("categoryNum is null");
            return (Criteria) this;
        }

        public Criteria andCategorynumIsNotNull() {
            addCriterion("categoryNum is not null");
            return (Criteria) this;
        }

        public Criteria andCategorynumEqualTo(Integer value) {
            addCriterion("categoryNum =", value, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumNotEqualTo(Integer value) {
            addCriterion("categoryNum <>", value, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumGreaterThan(Integer value) {
            addCriterion("categoryNum >", value, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumGreaterThanOrEqualTo(Integer value) {
            addCriterion("categoryNum >=", value, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumLessThan(Integer value) {
            addCriterion("categoryNum <", value, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumLessThanOrEqualTo(Integer value) {
            addCriterion("categoryNum <=", value, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumIn(List<Integer> values) {
            addCriterion("categoryNum in", values, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumNotIn(List<Integer> values) {
            addCriterion("categoryNum not in", values, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumBetween(Integer value1, Integer value2) {
            addCriterion("categoryNum between", value1, value2, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategorynumNotBetween(Integer value1, Integer value2) {
            addCriterion("categoryNum not between", value1, value2, "categorynum");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoIsNull() {
            addCriterion("categoryOrderNo is null");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoIsNotNull() {
            addCriterion("categoryOrderNo is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoEqualTo(Integer value) {
            addCriterion("categoryOrderNo =", value, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoNotEqualTo(Integer value) {
            addCriterion("categoryOrderNo <>", value, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoGreaterThan(Integer value) {
            addCriterion("categoryOrderNo >", value, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoGreaterThanOrEqualTo(Integer value) {
            addCriterion("categoryOrderNo >=", value, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoLessThan(Integer value) {
            addCriterion("categoryOrderNo <", value, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoLessThanOrEqualTo(Integer value) {
            addCriterion("categoryOrderNo <=", value, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoIn(List<Integer> values) {
            addCriterion("categoryOrderNo in", values, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoNotIn(List<Integer> values) {
            addCriterion("categoryOrderNo not in", values, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoBetween(Integer value1, Integer value2) {
            addCriterion("categoryOrderNo between", value1, value2, "categoryorderno");
            return (Criteria) this;
        }

        public Criteria andCategoryordernoNotBetween(Integer value1, Integer value2) {
            addCriterion("categoryOrderNo not between", value1, value2, "categoryorderno");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table blogcategory
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table blogcategory
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}